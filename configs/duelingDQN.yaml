lr: 0.001  # learning rate
buffer_size: 200_000  # buffer size
batch_size: 32 #32 #64  # batch size for sampling from the buffer
gamma: 0.99  # discount factor
num_episodes: 100_000  # number of episodes to train
epsilon: 10  # initial value of epsilon
epsilon_decay_rate: 0.0015 #0.0015 #0.00015 # after each episode, epsilon would be updated as epsion -= (epsilon_decay_rate)*epsilon
polyak_const: 0.995  # polyak constant for updating the target network
min_epsilon: 0.15  # minimum value of epsilon after which decay won't occur
render: False  # setting it to True would render after every "render_freq" episodes
render_freq: 500  # if render is True, the episode will be rendered after every render_freq episodes
save_path: "./models/duelingdqn_TIMESTEP_0_5_BASELINE_experiment_A_EPISOL_10"  # path to save the model files
save_freq: 50  # model would be saved after every save_freq epsidoes
hidden_layers: [1024 ,512, 128, 32] #[32,16,8,4] [512, 128]  # the hidden layers of the model. Input layer size will be fixed according to the observation shape
v_net_layers: [32, 1]  #[32, 16, 4, 1] #[128, 64, 1] #[128, 64, 4, 1]  # value network  
a_net_layers: [32,4]  #[32, 16, 4] #[128, 64, 4] #[128, 64, 4]  # advantage network [512, 128, 64, 1]
input_layer_size: 47
